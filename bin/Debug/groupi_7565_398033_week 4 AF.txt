using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    class GenericGame
    {
        private bool gameOver = false;
        public bool walk = false, jump = false, eat = false;
        public IFigure figure;

        public void run(IFactory f)
        {
            if(gameOver == false)
            {
                figure = f.createFigure();
                if (eat == true)
                {
                    figure.eat();
                }
                else if (jump == true)
                {
                    figure.jump();
                }
                else if (walk == true)
                {
                    figure.walk();
                }
            }
        }

        public void stop()
        {
            gameOver = true;
            eat = false;
            jump = false;
            walk = false;
        }

    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    interface IFactory
    {
        IFigure createFigure();
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    interface IFigure
    {
        string jump();
        string walk();
        string eat();
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    class Minion : IFigure
    {
        public string eat()
        {
            return "Minion Eat";
        }

        public string jump()
        {
            return "Minion Jump";
        }

        public string walk()
        {
            return "Minion Walk";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    class MinionFactory : IFactory
    {
        public IFigure createFigure()
        {
            return (new Minion());
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    class Program
    {
        static void Main(string[] args)
        {
            GenericGame game = new GenericGame();
            IFactory smurfFactory = new SmurfFactory();
            IFactory minionFactory = new MinionFactory();

            game.run(smurfFactory);
            Console.WriteLine("Game demo begin - Smurf created");
            Console.WriteLine(game.figure.jump());
            Console.WriteLine(game.figure.walk());
            Console.WriteLine(game.figure.eat());
            game.stop();
            Console.WriteLine("Game over the Smurf is gone!");

            Console.WriteLine(" ");

            game.run(minionFactory);
            Console.WriteLine("Game demo begin - Minion created");
            Console.WriteLine(game.figure.jump());
            Console.WriteLine(game.figure.walk());
            Console.WriteLine(game.figure.jump());

            game.stop();
            Console.WriteLine("Game over the Minion is gone!");

            Console.ReadKey();
        }
    }
}
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("DPR Assignment 4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("DPR Assignment 4")]
[assembly: AssemblyCopyright("Copyright ©  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("dc5cf13a-41b0-47bf-a7f1-9f89d0eb6acb")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    class Smurf : IFigure
    {
        public string eat()
        {
            return "Smurf Eat";
        }

        public string jump()
        {
            return "Smurf Jump";
        }

        public string walk()
        {
            return "Smurf Walk";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DPR_Assignment_4
{
    class SmurfFactory : IFactory
    {
        public IFigure createFigure()
        {
            return (new Smurf());
        }
    }
}
