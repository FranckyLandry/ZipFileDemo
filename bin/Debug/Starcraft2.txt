using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Drone : IWorker
    {
        private Random random;

        public Drone()
        {
            random = new Random();
        }

        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.drone);
            gr.DrawImage(img, p);
        }

        public string GatherMinerals()
        {
            int x = random.Next(0, 51);
            return x + " minerals collected!";
        }
    }
}using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Starcraft2
{
    public partial class Form1 : Form
    {
        private IStarcraft sc;
        private IDisplay queue;
        private string type;

        public Form1()
        {
            InitializeComponent();
            sc = new Protoss();
            queue = null;
            type = "";
            ClearButtons();
        }

        private void rbProtos_CheckedChanged(object sender, EventArgs e)
        {
            if (rbProtos.Checked)
            {
                sc = new Protoss();
                this.pictureBox1.Image = Properties.Resources.protoss;
                this.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
                queue = null;
                type = "";
                ClearButtons();
            }
            else
            {
                sc = new Zerg();
                this.pictureBox1.Image = Properties.Resources.zerg;
                this.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
                queue = null;
                type = "";
                ClearButtons();
            }
        }

        private void pDrawing_MouseClick(object sender, MouseEventArgs e)
        {
            Graphics g = pDrawing.CreateGraphics();
            Point p = new Point(e.X - 25, e.Y - 25);
            if (queue != null)
            {
                queue.Draw(g, p);
            }
        }

        private void btnBase_Click(object sender, EventArgs e)
        {
            queue = sc.CreateBase();
            type = "Base";
            ClearButtons();
            btnWAT.Text = "Complete task";
        }

        private void btnHouse_Click(object sender, EventArgs e)
        {
            queue = sc.CreateHouse();
            type = "House";
            btnWAT.Text = "Complete task";
            ClearButtons();
        }

        private void btnMelee_Click(object sender, EventArgs e)
        {
            queue = sc.CreateMaleeUnit();
            type = "Melee";
            btnWAT.Text = "Attack";
            ClearButtons();
        }

        private void btnRanged_Click(object sender, EventArgs e)
        {
            queue = sc.CreateRangedUnit();
            type = "Ranged";
            btnWAT.Text = "Attack";
            ClearButtons();
        }

        private void btnWorker_Click(object sender, EventArgs e)
        {
            queue = sc.CreateWorker();
            type = "Worker";
            btnWAT.Text = "Work";
            ClearButtons();
            MessageBox.Show(queue.GetType().ToString());
        }

        private void ClearButtons()
        {
            btnBase.BackColor = Color.Red;
            btnHouse.BackColor = Color.Red;
            btnMelee.BackColor = Color.Red;
            btnRanged.BackColor = Color.Red;
            btnWorker.BackColor = Color.Red;
            if (type != "") { Controls.Find("btn" + type, true)[0].BackColor = Color.LimeGreen; }
        }

        private void btnWAT_Click(object sender, EventArgs e)
        {
            string m = "";
            switch (type)
            {
                case "House":
                    m = ((IHouse)queue).Message();
                    break;

                case "Base":
                    m = ((IBase)queue).TaskComplete();
                    break;

                case "Worker":
                    m = ((IWorker)queue).GatherMinerals();
                    break;

                case "Melee":
                    m = ((IMaleeUnit)queue).Attack();
                    break;

                case "Ranged":
                    m = ((IRangedUnit)queue).Attack();
                    break;
            }
            lbMessages.Items.Add(m);
        }
    }
}
namespace Starcraft2
{
    partial class Form1
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1));
            this.pControls = new System.Windows.Forms.Panel();
            this.btnRanged = new System.Windows.Forms.Button();
            this.btnWorker = new System.Windows.Forms.Button();
            this.btnMelee = new System.Windows.Forms.Button();
            this.btnHouse = new System.Windows.Forms.Button();
            this.btnBase = new System.Windows.Forms.Button();
            this.rbZerg = new System.Windows.Forms.RadioButton();
            this.rbProtos = new System.Windows.Forms.RadioButton();
            this.pDrawing = new System.Windows.Forms.Panel();
            this.lbMessages = new System.Windows.Forms.ListBox();
            this.pictureBox1 = new System.Windows.Forms.PictureBox();
            this.btnWAT = new System.Windows.Forms.Button();
            this.pControls.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).BeginInit();
            this.SuspendLayout();
            // 
            // pControls
            // 
            this.pControls.BackColor = System.Drawing.Color.Yellow;
            this.pControls.Controls.Add(this.btnRanged);
            this.pControls.Controls.Add(this.btnWorker);
            this.pControls.Controls.Add(this.btnMelee);
            this.pControls.Controls.Add(this.btnHouse);
            this.pControls.Controls.Add(this.btnBase);
            this.pControls.Controls.Add(this.pictureBox1);
            this.pControls.Controls.Add(this.rbZerg);
            this.pControls.Controls.Add(this.rbProtos);
            this.pControls.Location = new System.Drawing.Point(0, 0);
            this.pControls.Name = "pControls";
            this.pControls.Size = new System.Drawing.Size(1344, 114);
            this.pControls.TabIndex = 0;
            // 
            // btnRanged
            // 
            this.btnRanged.Location = new System.Drawing.Point(953, 26);
            this.btnRanged.Name = "btnRanged";
            this.btnRanged.Size = new System.Drawing.Size(76, 66);
            this.btnRanged.TabIndex = 7;
            this.btnRanged.Text = "Ranged unit";
            this.btnRanged.UseVisualStyleBackColor = true;
            this.btnRanged.Click += new System.EventHandler(this.btnRanged_Click);
            // 
            // btnWorker
            // 
            this.btnWorker.Location = new System.Drawing.Point(1178, 26);
            this.btnWorker.Name = "btnWorker";
            this.btnWorker.Size = new System.Drawing.Size(76, 66);
            this.btnWorker.TabIndex = 6;
            this.btnWorker.Text = "Worker";
            this.btnWorker.UseVisualStyleBackColor = true;
            this.btnWorker.Click += new System.EventHandler(this.btnWorker_Click);
            // 
            // btnMelee
            // 
            this.btnMelee.Location = new System.Drawing.Point(728, 26);
            this.btnMelee.Name = "btnMelee";
            this.btnMelee.Size = new System.Drawing.Size(76, 66);
            this.btnMelee.TabIndex = 5;
            this.btnMelee.Text = "Melee unit";
            this.btnMelee.UseVisualStyleBackColor = true;
            this.btnMelee.Click += new System.EventHandler(this.btnMelee_Click);
            // 
            // btnHouse
            // 
            this.btnHouse.Location = new System.Drawing.Point(503, 26);
            this.btnHouse.Name = "btnHouse";
            this.btnHouse.Size = new System.Drawing.Size(76, 66);
            this.btnHouse.TabIndex = 4;
            this.btnHouse.Text = "House";
            this.btnHouse.UseVisualStyleBackColor = true;
            this.btnHouse.Click += new System.EventHandler(this.btnHouse_Click);
            // 
            // btnBase
            // 
            this.btnBase.Location = new System.Drawing.Point(278, 26);
            this.btnBase.Name = "btnBase";
            this.btnBase.Size = new System.Drawing.Size(76, 66);
            this.btnBase.TabIndex = 3;
            this.btnBase.Text = "Base";
            this.btnBase.UseVisualStyleBackColor = true;
            this.btnBase.Click += new System.EventHandler(this.btnBase_Click);
            // 
            // rbZerg
            // 
            this.rbZerg.AutoSize = true;
            this.rbZerg.Location = new System.Drawing.Point(12, 71);
            this.rbZerg.Name = "rbZerg";
            this.rbZerg.Size = new System.Drawing.Size(59, 21);
            this.rbZerg.TabIndex = 1;
            this.rbZerg.TabStop = true;
            this.rbZerg.Text = "Zerg";
            this.rbZerg.UseVisualStyleBackColor = true;
            // 
            // rbProtos
            // 
            this.rbProtos.AutoSize = true;
            this.rbProtos.Checked = true;
            this.rbProtos.Location = new System.Drawing.Point(12, 26);
            this.rbProtos.Name = "rbProtos";
            this.rbProtos.Size = new System.Drawing.Size(70, 21);
            this.rbProtos.TabIndex = 0;
            this.rbProtos.TabStop = true;
            this.rbProtos.Text = "Protos";
            this.rbProtos.UseVisualStyleBackColor = true;
            this.rbProtos.CheckedChanged += new System.EventHandler(this.rbProtos_CheckedChanged);
            // 
            // pDrawing
            // 
            this.pDrawing.Location = new System.Drawing.Point(0, 120);
            this.pDrawing.Name = "pDrawing";
            this.pDrawing.Size = new System.Drawing.Size(1038, 642);
            this.pDrawing.TabIndex = 1;
            this.pDrawing.MouseClick += new System.Windows.Forms.MouseEventHandler(this.pDrawing_MouseClick);
            // 
            // lbMessages
            // 
            this.lbMessages.FormattingEnabled = true;
            this.lbMessages.ItemHeight = 16;
            this.lbMessages.Location = new System.Drawing.Point(1044, 200);
            this.lbMessages.Name = "lbMessages";
            this.lbMessages.Size = new System.Drawing.Size(300, 564);
            this.lbMessages.TabIndex = 0;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.Location = new System.Drawing.Point(99, 12);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.Size = new System.Drawing.Size(91, 91);
            this.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pictureBox1.TabIndex = 2;
            this.pictureBox1.TabStop = false;
            // 
            // btnWAT
            // 
            this.btnWAT.Location = new System.Drawing.Point(1044, 120);
            this.btnWAT.Name = "btnWAT";
            this.btnWAT.Size = new System.Drawing.Size(300, 74);
            this.btnWAT.TabIndex = 2;
            this.btnWAT.UseVisualStyleBackColor = true;
            this.btnWAT.Click += new System.EventHandler(this.btnWAT_Click);
            // 
            // Form1
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 16F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(1344, 762);
            this.Controls.Add(this.btnWAT);
            this.Controls.Add(this.lbMessages);
            this.Controls.Add(this.pDrawing);
            this.Controls.Add(this.pControls);
            this.Name = "Form1";
            this.Text = "Starcraft the beginning";
            this.pControls.ResumeLayout(false);
            this.pControls.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).EndInit();
            this.ResumeLayout(false);

        }

        #endregion

        private System.Windows.Forms.Panel pControls;
        private System.Windows.Forms.Panel pDrawing;
        private System.Windows.Forms.RadioButton rbZerg;
        private System.Windows.Forms.RadioButton rbProtos;
        private System.Windows.Forms.PictureBox pictureBox1;
        private System.Windows.Forms.ListBox lbMessages;
        private System.Windows.Forms.Button btnRanged;
        private System.Windows.Forms.Button btnWorker;
        private System.Windows.Forms.Button btnMelee;
        private System.Windows.Forms.Button btnHouse;
        private System.Windows.Forms.Button btnBase;
        private System.Windows.Forms.Button btnWAT;
    }
}

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Hatchery : IBase
    {
        private List<string> tasks;
        private Random random;

        public Hatchery()
        {
            tasks = new List<string>() { "Research", "Overlord", "Zergling", "Queen", "Mutalisk" };
            random = new Random();
        }

        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.hatchery);
            gr.DrawImage(img, p);
        }

        public string TaskComplete()
        {
            return tasks[random.Next(0, tasks.Count)] + " complete";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Hydralisk : IRangedUnit
    {
        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.hydralisk);
            gr.DrawImage(img, p);
        }

        public string Attack()
        {
            return "*hissing*";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IBase : IDisplay
    {
        string TaskComplete();
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IDisplay
    {
        void Draw(Graphics gr, Point p);
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IHouse : IDisplay
    {
        string Message();
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IMaleeUnit : IDisplay
    {
        string Attack();
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IRangedUnit : IDisplay
    {
        string Attack();
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IStarcraft
    {
        IBase CreateBase();

        IHouse CreateHouse();

        IWorker CreateWorker();

        IMaleeUnit CreateMaleeUnit();

        IRangedUnit CreateRangedUnit();
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public interface IWorker : IDisplay
    {
        string GatherMinerals();
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Nexus : IBase
    {
        private List<string> tasks;
        private Random random;

        public Nexus()
        {
            tasks = new List<string> { "Research", "Pylon", "Zealot", "High templar", "Oracle" };
            random = new Random();
        }

        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.nexus);
            gr.DrawImage(img, p);
        }

        public string TaskComplete()
        {
            return tasks[random.Next(0, tasks.Count)] + " complete";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Overlord : IHouse
    {
        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.overlord);
            gr.DrawImage(img, p);
        }

        public string Message()
        {
            return "I am a house and I fly!";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Probe : IWorker
    {
        private Random random;

        public Probe()
        {
            random = new Random();
        }

        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.probe);
            gr.DrawImage(img, p);
        }

        public string GatherMinerals()
        {
            int x = random.Next(0, 51);
            return x + " minerals collected!";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Starcraft2
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());
        }
    }
}
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("Starcraft2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("Starcraft2")]
[assembly: AssemblyCopyright("Copyright ©  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("d53a0df5-8539-4d1a-b876-e021a6a73424")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Starcraft2.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Starcraft2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap drone {
            get {
                object obj = ResourceManager.GetObject("drone", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hatchery {
            get {
                object obj = ResourceManager.GetObject("hatchery", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hydralisk {
            get {
                object obj = ResourceManager.GetObject("hydralisk", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap nexus {
            get {
                object obj = ResourceManager.GetObject("nexus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap overlord {
            get {
                object obj = ResourceManager.GetObject("overlord", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap probe {
            get {
                object obj = ResourceManager.GetObject("probe", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap protoss {
            get {
                object obj = ResourceManager.GetObject("protoss", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pylon {
            get {
                object obj = ResourceManager.GetObject("pylon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stalker {
            get {
                object obj = ResourceManager.GetObject("stalker", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zealot {
            get {
                object obj = ResourceManager.GetObject("zealot", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zerg {
            get {
                object obj = ResourceManager.GetObject("zerg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zergling {
            get {
                object obj = ResourceManager.GetObject("zergling", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Starcraft2.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Protoss : IStarcraft
    {
        public IBase CreateBase()
        {
            return new Nexus();
        }

        public IHouse CreateHouse()
        {
            return new Pylon();
        }

        public IWorker CreateWorker()
        {
            return new Probe();
        }

        public IMaleeUnit CreateMaleeUnit()
        {
            return new Zealot();
        }

        public IRangedUnit CreateRangedUnit()
        {
            return new Stalker();
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Pylon : IHouse
    {
        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.pylon);
            gr.DrawImage(img, p);
        }

        public string Message()
        {
            return "Capacity increased by 10";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Stalker : IRangedUnit
    {
        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.stalker);
            gr.DrawImage(img, p);
        }

        public string Attack()
        {
            return "Death comes to all!";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Zealot : IMaleeUnit
    {
        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.zealot);
            gr.DrawImage(img, p);
        }

        public string Attack()
        {
            return "May your death be swift!";
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Zerg : IStarcraft
    {
        public IBase CreateBase()
        {
            return new Hatchery();
        }

        public IHouse CreateHouse()
        {
            return new Overlord();
        }

        public IWorker CreateWorker()
        {
            return new Drone();
        }

        public IMaleeUnit CreateMaleeUnit()
        {
            return new Zergling();
        }

        public IRangedUnit CreateRangedUnit()
        {
            return new Hydralisk();
        }
    }
}
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Starcraft2
{
    public class Zergling : IMaleeUnit
    {
        public void Draw(Graphics gr, Point p)
        {
            Image img = new Bitmap(Properties.Resources.zergling);
            gr.DrawImage(img, p);
        }

        public string Attack()
        {
            return "*screams furiously*";
        }
    }
}
